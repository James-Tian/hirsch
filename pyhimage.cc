// Autogenerated file for halcon type HImage

#include "pyhirsch.h"

static void
PyHirschImage_dealloc(PyHirschImage* self)
{
    if(self->Image)
        delete self->Image;
    self->ob_type->tp_free((PyObject*)self);
}

static int
PyHirschImage_init(PyHirschImage *self, PyObject *args, PyObject *kwds)
{
    const char *filename = NULL;
    const char *type = "byte";
    int width=1, height=1;
    static char *kwlist[] = {"Filename", "Width", "Height", NULL};
    
    if (! PyArg_ParseTupleAndKeywords(args, kwds, "|sii",
                                      kwlist,
                                      &filename,
                                      &width,
                                      &height))
        return -1; 
  
    if (filename) 
        self->Image = new Halcon::HImage(Halcon::HImage::ReadImage(filename));
    else
        // Uniform colored image
        self->Image = new Halcon::HImage(Halcon::HImage::GenImageConst(type, width, height));

    return 0;
}

#include "himage_autogen_methods_declarations.i"

static PyMethodDef PyHirschImage_methods[] = {
#include "himage_autogen_methods_list.i"
    {NULL}  /* Sentinel */
};

PyObject *PyHirschImage_FromHImage(Halcon::HImage Image)
{
    PyHirschImage *v = (PyHirschImage*)PyObject_New(PyHirschImage, &PyHirschImageType);
    v->Image = new Halcon::HImage(Image);
    return (PyObject*)v;
}

PyTypeObject PyHirschImageType = {
    PyObject_HEAD_INIT(NULL)
    0,                         /*ob_size*/
    "Halcon.Image",      /*tp_name*/
    sizeof(PyHirschImage), /*tp_basicsize*/
    0,                         /*tp_itemsize*/
    (destructor)PyHirschImage_dealloc,       /*tp_dealloc*/
    0,                         /*tp_print*/
    0,                         /*tp_getattr*/
    0,                         /*tp_setattr*/
    0,                         /*tp_compare*/
    0,                         /*tp_repr*/
    0,                         /*tp_as_number*/
    0,        /*tp_as_sequence*/
    0,                         /*tp_as_mapping*/
    0,                         /*tp_hash */
    0,                         /*tp_call*/
    0,                         /*tp_str*/
    0,                         /*tp_getattro*/
    0,                         /*tp_setattro*/
    0,                         /*tp_as_buffer*/
    Py_TPFLAGS_DEFAULT,        /*tp_flags*/
    "PyHirschImage",        /* tp_doc */
    0,		               /* tp_traverse */
    0,		               /* tp_clear */
    0,		               /* tp_richcompare */
    0,		               /* tp_weaklistoffset */
    0,		 /* tp_iter */
    0,         /* tp_iternext */
    PyHirschImage_methods,  /* tp_methods */
    0,                         /* tp_members */
    0,                         /* tp_getset */
    0,                         /* tp_base */
    0,                         /* tp_dict */
    0,                         /* tp_descr_get */
    0,                         /* tp_descr_set */
    0,                         /* tp_dictoffset */
    (initproc)PyHirschImage_init,          /* tp_init */
    0,                         /* tp_alloc */
    PyType_GenericNew,         /* tp_new */
};


void PyHirschImageAddToModule(PyObject *m)
{
    Py_INCREF(&PyHirschImageType);
    if (PyType_Ready(&PyHirschImageType) < 0)
        return;
    PyModule_AddObject(m, "HImage", (PyObject *)&PyHirschImageType);
}
